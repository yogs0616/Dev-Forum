package netcracker.developer.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;
import netcracker.developer.imp.WarningMsg;
import netcracker.developer.service.AnswerService;
import netcracker.developer.viewBean.AnswerBean;
import netcracker.developer.viewBean.LoginBean;
import netcracker.developer.viewBean.QuestionBean;
@Controller
public class AnswerController {

	
	@Autowired
	private AnswerService answerService;
	
	@RequestMapping(value = "/viewAns", method = RequestMethod.POST)
	public String postAnswer(HttpServletRequest request, HttpServletResponse response,@ModelAttribute() AnswerBean answerBean,
			BindingResult result,@RequestParam("solutionDesc") String solutionDesc) {
		HttpSession session = request.getSession(false);
		String user=(String)session.getAttribute("role");
		if(user == null){
			
			request.setAttribute("message","InValid Access Please Log In To Continue");
			return "redirect:/logout";
		}
		else{
			
			String username=(String) session.getAttribute("loggedInUser");
			int queryId=(int) session.getAttribute("qId");
			answerService.insertAnswer(answerBean, username,queryId);
			session.removeAttribute("qId");
				if(user.equals("admin")){
					return "redirect:/viewAns?queryId="+queryId;
				}
				else{
					return "redirect:/viewAns?queryId="+queryId;
				}
		
		}
	
	}
	
	@RequestMapping(value= "/viewAns", method = RequestMethod.GET)
	public ModelAndView viewAnswers(@RequestParam("queryId") int queryId,HttpServletRequest request,HttpServletResponse response ,
			@ModelAttribute AnswerBean answerBean,@ModelAttribute("QuestionBean") QuestionBean questionBean,@ModelAttribute LoginBean loginBean) {
		ModelAndView model=null;
		HttpSession session = request.getSession(false);
		String user=(String)session.getAttribute("role");
		if(user == null){
			 model=new ModelAndView("login");
			request.setAttribute("message","InValid Access Please Log In To Continue");
			
			String msg="InValid Access Please Log In To Continue";
			WarningMsg.showDialog(msg);
		
			model.addObject("loginBean", loginBean);
			
		}
		else{
		List<AnswerBean> answerList=new ArrayList<AnswerBean>();
		List<QuestionBean> queList=new ArrayList<QuestionBean>();
		
		String username=(String) session.getAttribute("loggedInUser");
		answerList=answerService.getAnswers(answerBean, queryId);
		queList=answerService.getQuestion(questionBean, queryId);
		session.setAttribute("qId",queryId);
		if(user.equals("admin")){
			 model=new ModelAndView("adminWelcome2");
		}else{
			model=new ModelAndView("memberWelcome2");
		}
		
		model.addObject("answerList",answerList);
		model.addObject("queList",queList);
	
		}
		return model;
	}

	

	
	@RequestMapping(value= "/guestWelcome2", method = RequestMethod.GET)
	public ModelAndView postAnswersGuest(@RequestParam("queryId") int queryId,HttpServletRequest request,HttpServletResponse response ,
			@ModelAttribute("AnswerBean") AnswerBean answerBean,@ModelAttribute("QuestionBean") QuestionBean questionBean,BindingResult result,@ModelAttribute LoginBean loginBean) {
		List<AnswerBean> answerList=new ArrayList<AnswerBean>();
		List<QuestionBean> queList=new ArrayList<QuestionBean>();
		
		
		answerList=answerService.getAnswers(answerBean, queryId);
		queList=answerService.getQuestion(questionBean, queryId);
		
		ModelAndView model=new ModelAndView("guestWelcome2");
		model.addObject("answerList",answerList);
		model.addObject("queList",queList);
		
		
		return model;
	}
	
}
